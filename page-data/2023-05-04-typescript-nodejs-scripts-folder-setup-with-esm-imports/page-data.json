{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2023-05-04-typescript-nodejs-scripts-folder-setup-with-esm-imports/",
    "result": {"data":{"site":{"siteMetadata":{"title":"cccv blog"}},"markdownRemark":{"id":"482f1784-87e3-58c1-9b3f-55990c610d7a","excerpt":"In this blog post, we will discuss the discovery and teaching of the right setup to run TypeScript with Node.js and importing some ESM NPM modules, inside the…","html":"<p>In this blog post, we will discuss the discovery and teaching of the right setup to run TypeScript with Node.js and importing some ESM NPM modules, inside the <code class=\"language-text\">scripts</code> folder, under the repo setup that is for a TypeScript web frontend, without changing config files on the repo root level.</p>\n<h2 id=\"constraints-and-conditions\" style=\"position:relative;\"><a href=\"#constraints-and-conditions\" aria-label=\"constraints and conditions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Constraints and Conditions</h2>\n<p>Before we dive into the key points of the setup, let’s take a look at the constraints and conditions we will be working with:</p>\n<ol>\n<li>The project should be a TypeScript web frontend.</li>\n<li>We should run TypeScript with Node.js and import ESM NPM modules.</li>\n<li>The setup should be done inside a <code class=\"language-text\">scripts</code> folder.</li>\n<li>No config files on the repo root level should be changed.</li>\n</ol>\n<p>Now, let’s proceed with the key points of the setup.</p>\n<h2 id=\"key-points-of-the-setup\" style=\"position:relative;\"><a href=\"#key-points-of-the-setup\" aria-label=\"key points of the setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Key Points of the Setup</h2>\n<h3 id=\"1-run-ts-node-with---esm-flag\" style=\"position:relative;\"><a href=\"#1-run-ts-node-with---esm-flag\" aria-label=\"1 run ts node with   esm flag permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Run <code class=\"language-text\">ts-node</code> with <code class=\"language-text\">--esm</code> Flag</h3>\n<p>In order to run TypeScript with Node.js and import ESM NPM modules, we need to use the <code class=\"language-text\">--esm</code> flag when running <code class=\"language-text\">ts-node</code>. This enables support for ECMAScript modules.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ts-node --esm script.ts</code></pre></div>\n<h3 id=\"2-create-packagejson-in-the-scripts-folder\" style=\"position:relative;\"><a href=\"#2-create-packagejson-in-the-scripts-folder\" aria-label=\"2 create packagejson in the scripts folder permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Create <code class=\"language-text\">package.json</code> in the <code class=\"language-text\">scripts</code> Folder</h3>\n<p>Inside the <code class=\"language-text\">scripts</code> folder, create a <code class=\"language-text\">package.json</code> file with just one property, <code class=\"language-text\">type: \"module\"</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This tells Node.js that all JavaScript files in this folder should be treated as ECMAScript modules.</p>\n<h3 id=\"3-create-a-separate-tsconfigjson-in-the-scripts-folder\" style=\"position:relative;\"><a href=\"#3-create-a-separate-tsconfigjson-in-the-scripts-folder\" aria-label=\"3 create a separate tsconfigjson in the scripts folder permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Create a Separate <code class=\"language-text\">tsconfig.json</code> in the <code class=\"language-text\">scripts</code> Folder</h3>\n<p>We need a separate <code class=\"language-text\">tsconfig.json</code> file in the <code class=\"language-text\">scripts</code> folder to configure TypeScript for our Node.js scripts. This allows us to have different TypeScript configurations for the web frontend and the <code class=\"language-text\">scripts</code> folder.</p>\n<p>Create a <code class=\"language-text\">tsconfig.json</code> file in the <code class=\"language-text\">scripts</code> folder with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ESNext\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ES2020\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"baseUrl\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./**/*.ts\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This configuration sets the module system to <code class=\"language-text\">ESNext</code> and the target to <code class=\"language-text\">ES2020</code>, which enables support for ECMAScript modules and modern JavaScript features.</p>\n<h3 id=\"4-use-js-extension-in-typescript-script-imports\" style=\"position:relative;\"><a href=\"#4-use-js-extension-in-typescript-script-imports\" aria-label=\"4 use js extension in typescript script imports permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Use <code class=\"language-text\">.js</code> Extension in TypeScript Script Imports</h3>\n<p>When importing another TypeScript file in the <code class=\"language-text\">scripts</code> folder, use the <code class=\"language-text\">.js</code> extension for the relative import path, as required by the ESM specification in Node.js. However, do not use the <code class=\"language-text\">.ts</code> extension, as this will cause a TypeScript error.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// Correct import statement</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> myFunction <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./myModule.js\"</span>\n\n<span class=\"token comment\">// Incorrect import statement</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> myFunction <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./myModule.ts\"</span></code></pre></div>\n<p>By following these key points, you can set up a TypeScript project with Node.js and import ESM NPM modules without changing any config files on the repo root level, while keeping everything inside the <code class=\"language-text\">scripts</code> folder.</p>\n<hr>\n<h1 id=\"generated-by-chatgpt-gpt-4\" style=\"position:relative;\"><a href=\"#generated-by-chatgpt-gpt-4\" aria-label=\"generated by chatgpt gpt 4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generated by ChatGPT gpt-4</h1>\n<p>The above blog post was 100% generated by gpt-4 with the following prompt:</p>\n<blockquote>\n<p>write a blog post in markdown syntax about the discovery and teaching of the right setup to run typescript with nodejs and importing some esm npm modules, inside <code class=\"language-text\">scripts</code> folder, under the repo setup that is for a typescript web frontend, without changing config files on the repo root level.\nSpecify the constraints and conditions beforehand.</p>\n<p>Then, for the key points of the setup involves</p>\n<ul>\n<li>running <code class=\"language-text\">ts-node</code> with <code class=\"language-text\">--esm</code> flag</li>\n<li>creating <code class=\"language-text\">package.json</code> in the <code class=\"language-text\">scripts</code> folder, with just one property <code class=\"language-text\">type: \"module\"</code></li>\n<li>creating a separate <code class=\"language-text\">tsconfig.json</code> in the <code class=\"language-text\">scripts</code> folder</li>\n<li>in typescript script in<code class=\"language-text\">scripts</code> folder, when importing another ts file, the relative import path should includes extension <code class=\"language-text\">.js</code> because of esm requirement of nodejs, but not <code class=\"language-text\">.ts</code> because of typescript error</li>\n</ul>\n</blockquote>","frontmatter":{"title":"The Right Setup to Run TypeScript with Node.js and Importing ESM NPM Modules in a TypeScript Web Frontend","date":"May 04, 2023","description":null}},"previous":{"fields":{"slug":"/2023-04-12-why-brwoser-redirect-to-different-domain/"},"frontmatter":{"title":"Why brwoser redirect to different domain with text \"/\\abc.com\"?"}},"next":null},"pageContext":{"id":"482f1784-87e3-58c1-9b3f-55990c610d7a","previousPostId":"a4c5fe89-d85c-5d91-83a0-c7d1a9e024b2","nextPostId":null}},
    "staticQueryHashes": ["1776624730","3000541721","3274528899"]}